#!/usr/bin/python3
#x3.in.filter=^(?P<prefix>[a-z0-9._-]+\.jmx_memory)\.(init|committed|used|max)\.value$
#x3.out.filter=^(?P<prefix>[a-z0-9._-]+\.jmx_memory)\.(init|committed|used|max)\.percentage$

#   ExtreMon Project
#   Copyright (C) 2009-2012 Frank Marien
#   frank@apsu.be
#
#   This file is part of ExtreMon.
#
#   ExtreMon is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   ExtreMon is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with ExtreMon.  If not, see <http://www.gnu.org/licenses/>.
#

import re
from x3plugin import X3IO

class JAVAMEM(X3IO):
  def __init__(self):
    self.log("running")
    X3IO.__init__(self,cache=True,capture=True)

  def receive(self,shuttle):
    for (label,value,captures) in shuttle:
      try:
        prefix=captures['prefix']
        init=float(self.cached['%s.init.value' % (prefix)])
        committed=float(self.cached['%s.committed.value' % (prefix)])
        used=float(self.cached['%s.used.value' % (prefix)])
        max=float(self.cached['%s.max.value' % (prefix)])
        self.put('%s.init.percentage' % (prefix),((init/max)*100.0))
        self.put('%s.committed.percentage' % (prefix),((committed/max)*100.0))
        self.put('%s.used.percentage' % (prefix),((used/max)*100.0))
        self.put('%s.max.percentage' % (prefix),'100.0')
      except KeyError:
        pass

JAVAMEM()
  


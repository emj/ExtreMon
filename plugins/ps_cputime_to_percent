#!/usr/bin/python3
#x3.in.filter=^(?P<prefix>[a-z0-9._-]+\.ps_cputime)\.(user|syst)$
#x3.out.filter=^(?P<prefix>[a-z0-9._-]+\.ps_cputime)\.(user|syst)\.(average|minimum|maximum)$
from x3plugin import X3IO
#-------------------------------------------------------------------------

class PSCPU(X3IO):
  def __init__(self):
    self.log("running")
    self.cmas={}
    self.mins={}
    self.maxs={}
    X3IO.__init__(self)

  def receive(self,shuttle):
    for (label,value) in shuttle:
      value=float(value)/10000.0
      try:
        cma=self.cmas[label]
        cma['value']+=(value-cma['value'])/(cma['count']+1)
        cma['count']+=1
        if value < self.mins[label]:
          self.mins[label]=value
        if value > self.maxs[label]:
          self.maxs[label]=value
        self.put('%s.average' % (label),'%.2f' % (self.cmas[label]['value']))
        self.put('%s.minimum' % (label),'%.2f' % (self.mins[label]))
        self.put('%s.maximum' % (label),'%.2f' % (self.maxs[label]))
      except KeyError:
        self.cmas[label]={'value':0.0,'count':1}
        self.mins[label]=value
        self.maxs[label]=value

PSCPU()
